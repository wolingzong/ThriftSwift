/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

import Foundation

import Thrift


public enum UnitType_e : TEnum {
  case fighter
  case bomber
  case destroyer
  case frigate
  case transporter

  public static func read(from proto: TProtocol) throws -> UnitType_e {
    let raw: Int32 = try proto.read()
    let new = UnitType_e(rawValue: raw)
    if let unwrapped = new {
      return unwrapped
    } else {
      throw TProtocolError(error: .invalidData,
                           message: "Invalid enum value (\(raw)) for \(UnitType_e.self)")
    }
  }

  public init() {
    self = .fighter
  }

  public var rawValue: Int32 {
    switch self {
    case .fighter: return 0
    case .bomber: return 1
    case .destroyer: return 2
    case .frigate: return 3
    case .transporter: return 4
    }
  }

  public init?(rawValue: Int32) {
    switch rawValue {
    case 0: self = .fighter
    case 1: self = .bomber
    case 2: self = .destroyer
    case 3: self = .frigate
    case 4: self = .transporter
    default: return nil
    }
  }
}

public final class Unit_s {

  public var attackArea: Int8

  public var maxTargetCount: Int8

  public var attack: Int64

  public var health: Int64

  public var armor: Int64

  public var travelSpeed: Int64

  public var maxMoveRange: Int64

  public var cargo: Int64

  public var id: String


  public init(attackArea: Int8, maxTargetCount: Int8, attack: Int64, health: Int64, armor: Int64, travelSpeed: Int64, maxMoveRange: Int64, cargo: Int64, id: String) {
    self.attackArea = attackArea
    self.maxTargetCount = maxTargetCount
    self.attack = attack
    self.health = health
    self.armor = armor
    self.travelSpeed = travelSpeed
    self.maxMoveRange = maxMoveRange
    self.cargo = cargo
    self.id = id
  }

}

public final class Army_s {

  public var id: String

  public var unitList: TList<Unit_s>


  public init(id: String, unitList: TList<Unit_s>) {
    self.id = id
    self.unitList = unitList
  }

}


